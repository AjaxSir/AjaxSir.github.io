import{_ as n,o as s,c as a,a as t}from"./app-5351db84.js";const p={},e=t(`<h3 id="vscode添加webview" tabindex="-1"><a class="header-anchor" href="#vscode添加webview" aria-hidden="true">#</a> vscode添加webview</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>panel<span class="token punctuation">.</span>webview<span class="token punctuation">.</span>html <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getWebViewContent</span><span class="token punctuation">(</span><span class="token string">&#39;相对路径&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token function">getWebViewContent</span><span class="token punctuation">(</span>templatePath<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>

    <span class="token comment">/*
      由于webview运行于一个黑盒中，所以已有的相对路径不可用，需要经过转化为vscode.uri类型的地址才能被正常访问
    */</span>

    <span class="token keyword">const</span> resourcePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> templatePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> dirPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> html <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(&lt;link.+?href=&quot;|&lt;script.+?src=&quot;|&lt;img.+?src=&quot;)(.+?)&quot;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> $1<span class="token punctuation">,</span> $2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> pathS <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>dirPath<span class="token punctuation">,</span> $2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> pathStr <span class="token operator">=</span> FlashToolWebview<span class="token punctuation">.</span>CurrentPanel<span class="token punctuation">.</span>webview<span class="token punctuation">.</span><span class="token function">asWebviewUri</span><span class="token punctuation">(</span>vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>pathS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> rtn <span class="token operator">=</span> $1 <span class="token operator">+</span> pathStr <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> rtn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> html<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vscode-webview通信" tabindex="-1"><a class="header-anchor" href="#vscode-webview通信" aria-hidden="true">#</a> vscode-webview通信</h3><ol><li>vscode端接收消息</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在扩展中，创建一个 WebView 并设置 onDidReceiveMessage 事件监听器</span>
<span class="token keyword">let</span> panel <span class="token operator">=</span> vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">createWebviewPanel</span><span class="token punctuation">(</span>
  <span class="token string">&#39;myWebView&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 编辑器中显示的名称</span>
  <span class="token string">&#39;My WebView&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 面板的标题</span>
  vscode<span class="token punctuation">.</span>ViewColumn<span class="token punctuation">.</span>One<span class="token punctuation">,</span> <span class="token comment">// 编辑器列</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 设置 onDidReceiveMessage 事件监听器</span>
panel<span class="token punctuation">.</span>webview<span class="token punctuation">.</span><span class="token function">onDidReceiveMessage</span><span class="token punctuation">(</span>
  <span class="token parameter">message</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理收到的消息</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>command <span class="token operator">===</span> <span class="token string">&#39;alert&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">showInformationMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  context<span class="token punctuation">.</span>subscriptions
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>vscode 发送消息</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>panel<span class="token punctuation">.</span>webview<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>webview接收消息</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 处理插件发送的消息</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> message <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>command <span class="token operator">===</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Message from VS Code extension:&#39;</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>webview发送消息</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">const</span> vscode <span class="token operator">=</span> <span class="token function">acquireVsCodeApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// acquireVsCodeApi 是由 VS Code 注入到 WebView 的全局作用域中的一个函数</span>

  <span class="token comment">// 监听来自插件的消息</span>
  vscode<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">command</span><span class="token operator">:</span> <span class="token string">&#39;webviewReady&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;WebView is ready!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册命令事件" tabindex="-1"><a class="header-anchor" href="#注册命令事件" aria-hidden="true">#</a> 注册命令事件</h3><ol><li>注册事件命令: <code>vscode.commands.registerCommand(command: string, (params) =&gt; {})</code></li><li>使用示例</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token string">&quot;GetLocaleLanguage&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span>c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> localeResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path_configJson<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> configJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>configJson<span class="token punctuation">.</span>locale <span class="token operator">&amp;&amp;</span> configJson<span class="token punctuation">.</span>locale <span class="token operator">===</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;zh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> localeResult<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>调用示例</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vscode<span class="token punctuation">.</span>commands<span class="token punctuation">.</span><span class="token function">executeCommand</span><span class="token punctuation">(</span><span class="token string">&quot;GetLocaleLanguage&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">language</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> toSendMessage <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">command</span><span class="token operator">:</span> <span class="token string">&#39;requestLocaleLanguage&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;response&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">isSuccess</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">details</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">language</span><span class="token operator">:</span> language
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SendMessageToWebView</span><span class="token punctuation">(</span>toSendMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将语言类型返给webview</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打开一个文本文档" tabindex="-1"><a class="header-anchor" href="#打开一个文本文档" aria-hidden="true">#</a> 打开一个文本文档</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">showTextDocument</span><span class="token punctuation">(</span>vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">textEditor</span><span class="token operator">:</span> vscode<span class="token punctuation">.</span>TextEditor</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>currentEditor <span class="token operator">=</span> textEditor<span class="token punctuation">;</span>
      <span class="token keyword">const</span> lastLine <span class="token operator">=</span> textEditor<span class="token punctuation">.</span>document<span class="token punctuation">.</span>lineCount<span class="token punctuation">;</span>
      textEditor<span class="token punctuation">.</span><span class="token function">revealRange</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">vscode<span class="token punctuation">.</span>Range</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">vscode<span class="token punctuation">.</span>Position</span><span class="token punctuation">(</span>lastLine<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">vscode<span class="token punctuation">.</span>Position</span><span class="token punctuation">(</span>lastLine<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>详细说明</li></ol><ul><li>vscode.Uri.file(path) 创建一个表示指定文件路径的 vscode.Uri 对象，用于标识要打开的文本文档。</li><li>options<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">viewColumn</span><span class="token operator">:</span> vscode<span class="token punctuation">.</span>ViewColumn<span class="token punctuation">.</span>One<span class="token punctuation">,</span> <span class="token comment">// 打开在第一列</span>
  <span class="token literal-property property">preview</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// true，文档将以只读模式打开</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>const lastLine = textEditor.document.lineCount; 获取打开文档的总行数</li><li>textEditor.revealRange(new vscode.Range(new vscode.Position(lastLine, 0), new vscode.Position(lastLine, 0))); 使用 revealRange 方法来确保打开的文本编辑器滚动到指定的范围。在这里，它滚动到文档的最后一行 vscode.Range 用于表示一个文本范围，vscode.Position 表示一个位置。</li></ul><h3 id="创建一个输出通道读取日志文件并展示" tabindex="-1"><a class="header-anchor" href="#创建一个输出通道读取日志文件并展示" aria-hidden="true">#</a> 创建一个输出通道读取日志文件并展示</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>outputInstance <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>outputInstance <span class="token operator">=</span> vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">createOutputChannel</span><span class="token punctuation">(</span><span class="token string">&quot;Flashtool log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个输出通道</span>
        <span class="token comment">// this.outputInstance.show() 则展示</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> <span class="token function-variable function">listener</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">curr<span class="token punctuation">,</span> prev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 文件的当前状态 之前的状态</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>curr<span class="token punctuation">.</span>size <span class="token operator">-</span> prev<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 有新增信息</span>
          fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fd</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 使用 fs.open 方法以只读模式打开文件，获取文件描述符 fd。</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 如果出现错误，将错误信息追加到输出通道并记录日志</span>
              <span class="token keyword">this</span><span class="token punctuation">.</span>outputInstance<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              fs<span class="token punctuation">.</span><span class="token function">closeSync</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> buffer <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span>curr<span class="token punctuation">.</span>size <span class="token operator">-</span> prev<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个大小为新增内容长度的缓冲区</span>
              <span class="token comment">// fd 打开文件后返回的一个标识符 用于标识已经打开的文件</span>
              <span class="token comment">// buffer 用于存储读取的数据的缓冲区</span>
              <span class="token comment">// 0 开始写入数据的偏移量。通常是 0</span>
              <span class="token comment">// buffer.length 表示要从文件中读取的字节数</span>
              <span class="token comment">// prev.size 文件中的起始位置，从这个位置开始读取数据</span>
              fs<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>length<span class="token punctuation">,</span> prev<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> bytesRead<span class="token punctuation">,</span> buffer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token keyword">this</span><span class="token punctuation">.</span>outputInstance<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">printLog</span><span class="token punctuation">(</span><span class="token string">&quot;read log file error-&quot;</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  <span class="token keyword">this</span><span class="token punctuation">.</span>outputInstance<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                fs<span class="token punctuation">.</span><span class="token function">closeSync</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// open之后 释放文件</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      fs<span class="token punctuation">.</span><span class="token function">unwatchFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 关闭上次的监听事件</span>
      fs<span class="token punctuation">.</span><span class="token function">watchFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">interval</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 重新开启新的监听事件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vscode选择文件弹框" tabindex="-1"><a class="header-anchor" href="#vscode选择文件弹框" aria-hidden="true">#</a> vscode选择文件弹框</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> DialogConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">canSelectFiles</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否可选文件</span>
      <span class="token literal-property property">canSelectFolders</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否可选文件夹</span>
      <span class="token literal-property property">canSelectMany</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否可以选择多个</span>
      <span class="token literal-property property">defaultUri</span><span class="token operator">:</span> vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 默认打开本地路径</span>
      <span class="token literal-property property">openLabel</span><span class="token operator">:</span> openLabel<span class="token punctuation">,</span> <span class="token comment">// 打开按钮的标签</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> title <span class="token comment">// 对话框的标题</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    vscode<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span>
      DialogConfig
    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">result</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> selectedFilePath <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fsPath<span class="token punctuation">;</span>
        <span class="token keyword">let</span> toSendMessage <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">command</span><span class="token operator">:</span> command<span class="token punctuation">,</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;response&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">isSuccess</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">details</span><span class="token operator">:</span> selectedFilePath<span class="token punctuation">,</span>
          <span class="token literal-property property">functionName</span><span class="token operator">:</span> functionName
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SendMessageToWebView</span><span class="token punctuation">(</span>toSendMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vscode保存文件弹框" tabindex="-1"><a class="header-anchor" href="#vscode保存文件弹框" aria-hidden="true">#</a> vscode保存文件弹框</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>vscode<span class="token punctuation">.</span>window
      <span class="token punctuation">.</span><span class="token function">showSaveDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">defaultUri</span><span class="token operator">:</span> vscode<span class="token punctuation">.</span>Uri<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>data<span class="token punctuation">.</span>defaultName<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 保存默认名称</span>
        <span class="token literal-property property">filters</span><span class="token operator">:</span> message<span class="token punctuation">.</span>data<span class="token punctuation">.</span>filter<span class="token punctuation">,</span> <span class="token comment">// 以什么后缀保存 { &quot;Img Files&quot;: [&quot;img&quot;], }</span>
        <span class="token literal-property property">saveLabel</span><span class="token operator">:</span> message<span class="token punctuation">.</span>data<span class="token punctuation">.</span>saveLabel<span class="token punctuation">,</span> <span class="token comment">// 保存按钮的标签</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">uri</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> toSendMessage <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">isSuccess</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token literal-property property">result</span><span class="token operator">:</span> uri<span class="token punctuation">.</span>fsPath<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> message<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SendMessageToWebView</span><span class="token punctuation">(</span>toSendMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","changyongapi.html.vue"]]);export{r as default};

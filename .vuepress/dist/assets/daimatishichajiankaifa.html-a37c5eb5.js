import{_ as i,r as n,o,c as r,a as e,b as t,d as l,e as a}from"./app-998a40c2.js";const c="/assets/package.json-3428d2cb.png",d="/assets/extension-bc81120d.png",p="/assets/field-b7d87a1a.png",h="/assets/utils-8fc3d64a.png",m="/assets/readMarkdownFiles-b1830e77.png",u="/assets/parseMarkdown-04d64402.png",_="/assets/main-c40a80c5.png",g="/assets/project-tree-1b33a013.png",f={},x=a('<h2 id="首先用官方脚手架搭建初始项目" tabindex="-1"><a class="header-anchor" href="#首先用官方脚手架搭建初始项目" aria-hidden="true">#</a> 首先用官方脚手架搭建初始项目</h2><ol><li><code>npm install -g yo generator-code</code></li><li><code>yo code</code></li></ol><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><h3 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json" aria-hidden="true">#</a> package.json</h3><p><img src="'+c+'" alt="package.json" title="package.json预览"></p><h3 id="extension-ts" tabindex="-1"><a class="header-anchor" href="#extension-ts" aria-hidden="true">#</a> extension.ts</h3><p><img src="'+d+'" alt="extension.ts" title="extension.ts预览"></p><ul><li>api:vscode.languages.registerCompletionItemProvider 1.LANGUAGE 需要代码提示的文件类型 2.provideCompletionItems 代码提示提供者</li><li>const range = document.lineAt(position).range; 获取当前光标所在文本行</li><li>const text = document.getText(range).split(/ +/); 将当前光标所在文本以一个或多个空格分割</li><li>const filterText = text[text.length - 1]; 获取到最后一个空格后的文案用于筛选代码提示</li><li>const content = fs.readFileSync(path.resolve(__dirname, &#39;../out/file.json&#39;), &#39;utf-8&#39;); 获取解析后的md文件</li><li>label: $(BST-1) ${i.label} BST-1 则是对应package.json中的icon字段</li><li>insertText则是回车之后填入的内容</li><li>filterText 用于筛选用户的输入字符 <img src="'+p+'" alt="字段详解" title="字段详解"></li></ul>',8),k={href:"https://security.feishu.cn/link/safety?target=https%3A%2F%2Fcode.visualstudio.com%2Fapi%2Freferences%2Fvscode-api%23CompletionItem&scene=ccm&logParams=%7B%22location%22%3A%22ccm_docs%22%7D&lang=zh-CN",target:"_blank",rel:"noopener noreferrer"},b=a('<h3 id="utils-ts" tabindex="-1"><a class="header-anchor" href="#utils-ts" aria-hidden="true">#</a> utils.ts</h3><p>utils.ts预览 <img src="'+h+'" alt="utils.ts"></p><ul><li>readMarkdownFiles 读取document下的md文件 <img src="'+m+'" alt="readMarkdownFiles"></li></ul><blockquote><p>其中 返回的文件列表生成器对象的好处在于它可以提供一种按需生成值的方式，这对于处理大量数据或者需要动态生成数据的场景很有用</p></blockquote><ul><li>parseMarkdown 根据md文件的规律分割 Parameters Return Description并放入数组 <img src="'+u+'" alt="parseMarkdown"></li></ul><h3 id="main" tabindex="-1"><a class="header-anchor" href="#main" aria-hidden="true">#</a> main</h3><ul><li>将document下的md文件分析结果存入out/file.json文件 <img src="'+_+'" alt="main"></li></ul><h3 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构" aria-hidden="true">#</a> 项目结构</h3><p><img src="'+g+'" alt="project-tree" title="项目结构"></p>',9);function j(v,F){const s=n("ExternalLinkIcon");return o(),r("div",null,[x,e("blockquote",null,[e("p",null,[t("更多字段详细请查看"),e("a",k,[t("【官方文档】 "),l(s)])])]),b])}const w=i(f,[["render",j],["__file","daimatishichajiankaifa.html.vue"]]);export{w as default};
